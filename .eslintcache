[{"C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\index.js":"1","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\App.js":"2","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\serviceWorker.js":"3","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\app\\store.js":"4","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\Sidebar.js":"5","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\Feed.js":"6","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\firebase.js":"7","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\Post.js":"8","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\features\\userSlice.js":"9","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\Login.js":"10","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\GlobalChat.js":"11","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\Message.js":"12","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\Search.js":"13","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\Comment.js":"14","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\Accounts.js":"15","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\EditPage.js":"16","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\Videocall.js":"17","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\Join.js":"18","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\Meeting.js":"19"},{"size":644,"mtime":499162500000,"results":"20","hashOfConfig":"21"},{"size":10124,"mtime":1610192922908,"results":"22","hashOfConfig":"21"},{"size":5141,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":186,"mtime":1609258713140,"results":"24","hashOfConfig":"21"},{"size":2147,"mtime":1610037950523,"results":"25","hashOfConfig":"21"},{"size":1687,"mtime":1610022597878,"results":"26","hashOfConfig":"21"},{"size":540,"mtime":1609260521550,"results":"27","hashOfConfig":"21"},{"size":10928,"mtime":1610022686425,"results":"28","hashOfConfig":"21"},{"size":462,"mtime":1609258417190,"results":"29","hashOfConfig":"21"},{"size":3813,"mtime":1610012093177,"results":"30","hashOfConfig":"21"},{"size":7274,"mtime":1610022397833,"results":"31","hashOfConfig":"21"},{"size":1303,"mtime":1610022038286,"results":"32","hashOfConfig":"21"},{"size":3048,"mtime":1610021742668,"results":"33","hashOfConfig":"21"},{"size":5277,"mtime":1609910319427,"results":"34","hashOfConfig":"21"},{"size":2009,"mtime":1609953028762,"results":"35","hashOfConfig":"21"},{"size":3296,"mtime":1610012588175,"results":"36","hashOfConfig":"21"},{"size":4502,"mtime":1610192557113,"results":"37","hashOfConfig":"21"},{"size":794,"mtime":1610192929930,"results":"38","hashOfConfig":"21"},{"size":237,"mtime":1610194479177,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"vefuc",{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"42"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"42"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\index.js",[],["92","93"],"C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\App.js",["94","95","96","97","98","99","100","101"],"import React, { useState, useEffect } from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport './App.css';\r\nimport Feed from './Feed';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Avatar, Button, Input } from '@material-ui/core';\r\nimport { db, storage, auth } from './firebase';\r\nimport firebase from 'firebase';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logout, login, selectUser } from './features/userSlice';\r\nimport Login from './Login';\r\nimport GlobalChat from './GlobalChat';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport Search from './Search';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Accounts from './Accounts';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Link } from 'react-router-dom';\r\nimport EditPage from './EditPage';\r\nimport Videocall from './Videocall';\r\nimport Join from './Join';\r\nimport Meeting from './Meeting';\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => (console.log(theme), {\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 300,\r\n    backgroundColor: 'rgb(21,32,43)',\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    border: 'none',\r\n    borderRadius: '10px',\r\n    outline: 'none',\r\n    animation: 'modal-animation 0.4s',\r\n    transition: 'all 0.2s ease-in',\r\n  },\r\n  mandatorySpan: {\r\n    color: 'var(--main-app-color)',\r\n    // fontSize: '15px'\r\n  },\r\n  subDiv: {\r\n    color: 'white',\r\n    padding: '10px'\r\n  },\r\n  messagePaper: {\r\n    position: 'absolute',\r\n    width: '86vw',\r\n    height: '80vh',\r\n    backgroundColor: 'rgb(21,32,43)',\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    border: 'none',\r\n    borderRadius: '10px',\r\n    outline: 'none',\r\n    animation: 'modalAnimation 0.4s'\r\n  }\r\n}));\r\n\r\nfunction App() {\r\n\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n  const [textArea, setTextArea] = useState('');\r\n  const [image, setImage] = useState(null);\r\n  const [accountInfo, setAccountInfo] = useState()\r\n  const [newPostModalState, setNewPostModalState] = useState(false); \r\n  const [accountModalState, setAccountModalState] = useState(false); \r\n  const [globalChatState, setGlobalChatState] = useState(false); \r\n  const [searchState, setSearchState] = useState(false); \r\n  const [collectedBio, setCollectedBio] = useState('');\r\n\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    \r\n    auth.onAuthStateChanged((userAuth) => {\r\n      setAccountInfo(userAuth);\r\n      if (userAuth) {\r\n        db.collection('users').doc(userAuth.uid).onSnapshot((snapshot) => {\r\n          setCollectedBio(snapshot.data());\r\n          console.log('COLLECTEDBIO', collectedBio);\r\n        })\r\n        console.log('Auto Sign IN', userAuth);\r\n        dispatch(login({\r\n          email: userAuth.email,\r\n          uid: userAuth.uid,\r\n          photoURL: userAuth.photoURL,\r\n          username: userAuth.displayName,\r\n          bio: collectedBio.bio,\r\n        }));\r\n      } else {\r\n        dispatch(logout());\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const newPost = (e) => {\r\n    let date = new Date();\r\n    let AmOrPm = date.getHours() < 12 ? 'AM' : 'PM';\r\n    console.log('THIS', db.collection('posts').onSnapshot(snap => snap.docs.map(doc => console.log(doc.data()))));               \r\n    if (image !== null) {\r\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n\r\n      uploadTask.on(\r\n          \"state_changed\",\r\n          () => {\r\n              storage\r\n                  .ref(\"images\")\r\n                  .child(image.name)\r\n                  .getDownloadURL()\r\n                  .then(url => {\r\n                    db?.collection('posts').add({\r\n                      myUid: user.uid,\r\n                      timestamp: `${date.getHours()}:${date.getMinutes()} ${AmOrPm}`,\r\n                      username: user.username,\r\n                      postPhotoUrl: url,\r\n                      userPhotoUrl: user.photoURL || '',\r\n                      message: textArea\r\n                    });   \r\n              });\r\n              setNewPostModalState(false);\r\n          }\r\n      );\r\n    } else {\r\n      db.collection('posts').add({\r\n        myUid: user.uid,\r\n        timestamp: `${date.getHours()}:${date.getMinutes()} ${AmOrPm}`,\r\n        username: user.username,\r\n        postPhotoUrl: null,\r\n        userPhotoUrl: user.photoURL || '',\r\n        message: textArea,\r\n      }); \r\n      setNewPostModalState(false);\r\n    }\r\n    \r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0]);\r\n    }\r\n  }\r\n\r\n  const logoutOfApp = () => {\r\n    dispatch(logout())\r\n    auth.signOut();\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {\r\n        !user ? (\r\n          <Login />\r\n        ) : (\r\n          <div className='app-body'>\r\n           <Router>\r\n\r\n             <Switch>\r\n\r\n              <Route path='/'>\r\n                \r\n              </Route>\r\n\r\n             </Switch>\r\n\r\n           <Switch>           \r\n                <Route path=\"/home\">\r\n                <Sidebar \r\n                  newPostClick={() => setNewPostModalState(true)} \r\n                  accountClick={() => setAccountModalState(true)}\r\n                  globeChatClick={() => setGlobalChatState(true)}\r\n                  searchClick={() => setSearchState(true)}\r\n                />\r\n                  <Modal className='modal' open={newPostModalState} onClose={() => setNewPostModalState(false)} >\r\n                      <div style={modalStyle} className={classes.paper}>\r\n                      <CancelIcon className='cancelModalIcon' onClick={() => setNewPostModalState(false)}/>\r\n                        <h2 className='modal-title'>New Post</h2>\r\n                        <div className=\"modal-main\">\r\n                          <span>Add Message*</span>\r\n                          <textarea value={textArea} onChange={(e) => setTextArea(e.target.value)} className='modalTextArea' placeholder=\"What's your message?\"></textarea>\r\n                          <label for=\"file-upload\" class=\"custom-file-upload\">\r\n                            <ImageIcon className='img-btn'/>\r\n                            <span className='file-span'>Add an Image</span>\r\n                          </label>\r\n                          <input onChange={handleImageChange} accept=\"image/x-png,image/gif,image/jpeg\" id=\"file-upload\" type=\"file\"/>\r\n                          <button onClick={newPost}>POST</button>\r\n                        </div>\r\n                      </div>\r\n                    </Modal>\r\n\r\n                    <Modal className='modal' open={accountModalState} onClose={() => setAccountModalState(false)}>\r\n                      <div style={modalStyle} className={classes.paper}>\r\n                      <CancelIcon className='cancelModalIcon' onClick={() => setAccountModalState(false)}/>\r\n                        <center>\r\n                          <h3 className='modal2-title'>Account Information</h3>\r\n                        </center>\r\n                        <div className={classes.subDiv}>\r\n                          <Avatar src={user.photoURL} className='account-info-img'/>\r\n                          <span>Date of Creation: <span className={classes.mandatorySpan}>{accountInfo?.multiFactor.a.metadata.creationTime}</span></span><br/>\r\n                          <span>UserName: <span className={classes.mandatorySpan}>{user.username}</span></span><br/>\r\n                          <span>Email ID: <span className={classes.mandatorySpan}>{user.email}</span></span>\r\n                        </div>\r\n                        <center>\r\n                          <Link to={`/profile/edit/${user.uid}`}><button className='bio-btn'>EDIT</button></Link>\r\n                          <button className='logout-btn' onClick={logoutOfApp}>LOG OUT</button>\r\n                        </center>\r\n                      </div>\r\n                    </Modal>\r\n\r\n                    <Modal className='modal' open={globalChatState} onClose={() => setGlobalChatState(false)}>\r\n                      <div style={modalStyle} className={classes.messagePaper}>\r\n                        <CancelIcon className='cancelModalIcon' onClick={() => setGlobalChatState(false)}/>\r\n                        <GlobalChat />\r\n                      </div>\r\n                    </Modal>     \r\n\r\n                    <Modal className='modal' open={searchState} onClose={() => setSearchState(false)}>\r\n                      <div style={modalStyle} className={classes.messagePaper}>\r\n                        <CancelIcon className='cancelModalIcon' onClick={() => setSearchState(false)}/>\r\n                        <Search />\r\n                      </div>\r\n                    </Modal> \r\n\r\n                    <Feed />\r\n                </Route>    \r\n           </Switch>\r\n\r\n           <Switch>\r\n                \r\n                <Route path=\"/profile/edit/:userUID\">\r\n                  <EditPage />\r\n                </Route>\r\n\r\n            </Switch>\r\n            \r\n           <Switch>\r\n                \r\n                <Route path=\"/users/:roomId\">\r\n                  <Accounts />\r\n                </Route>\r\n\r\n            </Switch>\r\n\r\n            <Switch>\r\n\r\n                <Route path=\"/videocall/:roomId\">\r\n\r\n                  <Videocall />\r\n\r\n                </Route>\r\n\r\n            </Switch>\r\n\r\n            <Switch>\r\n\r\n                <Route path=\"/meetings/join\">\r\n\r\n                  <Join />\r\n\r\n                </Route>\r\n\r\n            </Switch>\r\n\r\n            <Switch>\r\n\r\n              <Route path=\"/meeting/:roomId\">\r\n\r\n                <Meeting />\r\n\r\n              </Route>\r\n\r\n            </Switch>\r\n\r\n           </Router>\r\n          </div>\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\serviceWorker.js",[],"C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\app\\store.js",[],"C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\Sidebar.js",["102","103","104","105"],"import React from 'react';\r\nimport './Sidebar.css'\r\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\r\nimport { Avatar } from '@material-ui/core';\r\nimport MailOutlineRoundedIcon from '@material-ui/icons/MailOutlineRounded';\r\nimport ControlPointRoundedIcon from '@material-ui/icons/ControlPointRounded';\r\nimport Profile from '@material-ui/icons/ControlPointRounded';\r\nimport AccountCircleRoundedIcon from '@material-ui/icons/AccountCircleRounded';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport { useParams } from 'react-router-dom';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport uuid from 'react-uuid';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Sidebar({ newPostClick, accountClick, globeChatClick, searchClick }) {\r\n\r\n    // const { user }\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <h1 className='title'>Fb</h1>\r\n            <div className=\"sidebar-option\">\r\n                <span className='tooltip'>Home</span>\r\n                <HomeRoundedIcon />\r\n            </div>\r\n            <div className=\"sidebar-option\" onClick={searchClick}>\r\n                <span className='tooltip'>Search</span>\r\n                <SearchRoundedIcon /> \r\n            </div>\r\n            <div className=\"sidebar-option\" onClick={globeChatClick}>\r\n                <span className='tooltip'>Messages</span>\r\n                <ForumIcon />   \r\n            </div>\r\n            <div className=\"sidebar-option\" onClick={accountClick}>\r\n                <span className='tooltip'>Account</span>\r\n                <AccountCircleRoundedIcon />   \r\n            </div>\r\n            <div className=\"sidebar-option\" onClick={newPostClick}>\r\n                <span className='tooltip'>New Post</span>\r\n                <Profile />   \r\n            </div>\r\n            <Link to={`/videocall/${uuid()}`} className=\"sidebar-option video-call-icon\" onClick={newPostClick}>\r\n                <span className='tooltip'>Video Call</span>\r\n                <VideocamIcon />   \r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\Feed.js",["106","107","108","109","110","111","112"],"import React, { useState, useEffect } from 'react';\r\nimport './Feed.css';\r\nimport { Avatar } from '@material-ui/core';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport ChatRoundedIcon from '@material-ui/icons/ChatRounded';\r\nimport { db, auth, storage } from './firebase';\r\nimport Post from './Post';\r\nimport { selectUser } from './features/userSlice';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction Feed() {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const user = useSelector(selectUser);\r\n\r\n    useEffect(() => {\r\n        db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\r\n          setPosts(snapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            post: doc.data()\r\n          })));\r\n          console.log(posts);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <div className='feed'>\r\n            <div className=\"feed-header\">\r\n                <h3 className='subtitle'>Latest Feed</h3>\r\n            </div>\r\n            <div className=\"posts\">\r\n                {\r\n                    posts?.map(({ id, post }) => (\r\n                        <Post \r\n                            myUid={post.myUid}\r\n                            postId={id}\r\n                            key={id}\r\n                            userPhotoUrl={post.userPhotoUrl}\r\n                            username={post.username}\r\n                            timestamp={post.timestamp}\r\n                            message={post.message}\r\n                            postPhotoUrl={post.postPhotoUrl}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed;\r\n","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\firebase.js",[],"C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\Post.js",["113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133"],"import React, { useState, useEffect } from 'react'\r\nimport { Avatar } from '@material-ui/core';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logout, login, selectUser } from './features/userSlice';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport './Post.css'\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { db } from './firebase';\r\nimport ChatRoundedIcon from '@material-ui/icons/ChatRounded';\r\nimport Comment from './Comment';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport firebase from 'firebase';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => (console.log(theme), {\r\npaper: {\r\n    position: 'absolute',\r\n    width: 300,\r\n    backgroundColor: 'rgb(21,32,43)',\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    border: 'none',\r\n    borderRadius: '10px',\r\n    outline: 'none',\r\n    animation: 'modal-animation 0.4s'\r\n},\r\nmandatorySpan: {\r\n    color: 'var(--main-app-color)',\r\n    // fontSize: '15px'\r\n},\r\nsubDiv: {\r\n    color: 'white',\r\n    padding: '10px'\r\n},\r\nmessagePaper: {\r\n    position: 'absolute',\r\n    width: '86vw',\r\n    height: '80vh',\r\n    backgroundColor: 'rgb(21,32,43)',\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    border: 'none',\r\n    borderRadius: '10px',\r\n    outline: 'none',\r\n    animation: 'modalAnimation 0.4s'\r\n},\r\nmessagePaperTwo: {\r\n    position: 'absolute',\r\n    width: '86vw',\r\n    height: 'fit-content',\r\n    backgroundColor: 'rgb(21,32,43)',\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    border: 'none',\r\n    borderRadius: '10px',\r\n    outline: 'none',\r\n    animation: 'modalAnimation 0.4s'\r\n}\r\n}));\r\n\r\nlet selectedPostId;\r\n\r\nfunction Post({ username, timestamp, message, postPhotoUrl, userPhotoUrl, postId, myUid }) {\r\n\r\n    const user = useSelector(selectUser);\r\n    const [optionsModalState, setOptionSmodalState] = useState(false);\r\n    const [editModalState, setEditmodalState] = useState(false);\r\n    const classes = useStyles();\r\n    const [modalStyle] = useState(getModalStyle);\r\n    const [selectedEditData, setSelectedEditData] = useState([]);\r\n    const [newTextAreaValue, setNewTextAreaValue] = useState('');\r\n    const [commentsModalState, setCommentsModalState] = useState(false);\r\n    const [comments, setComments] = useState([]);\r\n    const [commentVal, setCommentVal] = useState('');\r\n    const [imageModal, setImageModal] = useState(false);\r\n\r\n    useEffect(() => {\r\n        console.log(postId);\r\n        let unsubscribe;\r\n        if (postId) {\r\n            unsubscribe = db\r\n                .collection('posts')\r\n                .doc(postId)\r\n                .collection('comments')\r\n                // .orderBy('timestamp', 'desc')\r\n                .onSnapshot((data) => {\r\n                    setComments(data.docs.map((doc) => ({\r\n                        id: doc.id,\r\n                        comment: doc.data()\r\n                    })));\r\n                });\r\n                console.log(comments);\r\n        } \r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, [postId]);\r\n\r\n    const optionsClick = (e) => {\r\n        selectedPostId = postId;\r\n        console.log(selectedPostId);\r\n        setOptionSmodalState(true);\r\n    }\r\n\r\n    const deleteSelectedPost = (e) => {\r\n        console.log(e);\r\n        db.collection('posts').doc(selectedPostId).delete();\r\n    }\r\n\r\n    const editSelectedPost = () => {\r\n        console.log(selectedPostId);\r\n        setEditmodalState(true);\r\n        db.collection('posts').doc(postId).onSnapshot(snapshot => {\r\n            console.log(snapshot.data());\r\n            setNewTextAreaValue(snapshot.data().message)\r\n        })\r\n    }\r\n\r\n    const editSelectedPostFinal = () => {\r\n        console.log(selectedPostId);\r\n        let date = new Date();\r\n        let AmOrPm = date.getHours() < 12 ? 'AM' : 'PM';\r\n        db.collection('posts').doc(selectedPostId).update({\r\n            message: newTextAreaValue,\r\n            timestamp: `${date.getHours()}:${date.getMinutes()} ${AmOrPm}`,\r\n        });\r\n        setEditmodalState(false);\r\n        setOptionSmodalState(false);\r\n    }\r\n\r\n    const queryCheck = (e) => {\r\n        if (e.keyCode == 13 && commentVal != '' || e.which == 13 && commentVal != '') {\r\n            postComment();\r\n        }\r\n    }\r\n    \r\n    const postComment = () => {\r\n\r\n        let date = new Date();\r\n\r\n        let AmOrPm = date.getHours() >= 12 ? 'PM' : 'AM';\r\n\r\n        let currentTime = date.getMinutes();\r\n\r\n        if (currentTime < 10) {\r\n            currentTime = `0${date.getMinutes()}`\r\n        }\r\n\r\n        let currentHour = date.getHours();\r\n\r\n        if (currentHour < 10) {\r\n            currentHour = `0${date.getHours()}`\r\n        }\r\n\r\n        db\r\n            .collection('posts')\r\n            .doc(postId)\r\n            .collection('comments').add({\r\n                userPhotoURL: user.photoURL,\r\n                comment: commentVal,\r\n                time: `${currentHour}:${currentTime} ${AmOrPm}`,\r\n                username: user.username,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n        setCommentVal('');\r\n    }\r\n\r\n    return (\r\n        <div key={postId} id={postId} className='post'>\r\n            <Modal className='modal' open={optionsModalState} onClose={() => setOptionSmodalState(false)}>\r\n                <div style={modalStyle} className={classes.paper}>\r\n                    <CancelIcon className='cancelModalIcon' onClick={() => setOptionSmodalState(false)}/>\r\n                    <div className='btn-handlers'>\r\n                        <button onClick={deleteSelectedPost}>Delete Post</button>\r\n                        <button onClick={editSelectedPost}>Edit Post</button>\r\n                    </div>\r\n                </div>\r\n            </Modal> \r\n\r\n            <Modal className='modal' open={editModalState} onClose={() => setEditmodalState(false)}>\r\n                <div style={modalStyle} className={classes.paper}>\r\n                    <CancelIcon className='cancelModalIcon' onClick={() => setEditmodalState(false)}/>\r\n                    <h2 className='modal-title'>Edit Post</h2>\r\n                    <div className=\"modal-main\">\r\n                    <span>Edit Message</span>\r\n                    <textarea \r\n                        value={newTextAreaValue}\r\n                        onChange={(e) => setNewTextAreaValue(e.target.value)}\r\n                        className='modalTextArea' \r\n                        placeholder=\"What's your message?\"\r\n                    ></textarea>\r\n                    <button onClick={editSelectedPostFinal}>Save</button>\r\n                    </div>\r\n                </div>\r\n            </Modal>  \r\n\r\n            <Modal className='modal' open={commentsModalState} onClose={() => setCommentsModalState(false)}>\r\n                <div style={modalStyle} className={classes.messagePaper}>\r\n                    <CancelIcon className='cancelModalIcon' onClick={() => setCommentsModalState(false)}/>\r\n                    <h2 className='comment-header'>Comments</h2>\r\n                    {\r\n                        comments.length > 0 ? (\r\n                            <div className=\"comments-main-div\">\r\n                                {\r\n                                    comments.map(({ id, comment }) => (\r\n                                        <Comment \r\n                                            parentPostId={postId}\r\n                                            key={id}\r\n                                            commentId={id}\r\n                                            userPhotoURL={comment.userPhotoURL}\r\n                                            message={comment.comment}\r\n                                            username={comment.username}\r\n                                            time={comment.time}\r\n                                        />\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        ) : (\r\n                            <h2 className='comment-header'>No Comments Yet</h2>\r\n                        )\r\n                    }\r\n                    <div className=\"comment-controls\">\r\n                        <input type=\"text\" placeholder='Type a message...' onKeyPress={queryCheck} value={commentVal} onChange={(e) => setCommentVal(e.target.value)}/>\r\n                        <SendIcon className='send-btn' onClick={postComment}/>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n\r\n            <Modal className='modal modalforimage' open={imageModal} onClose={() => setImageModal(false)}>\r\n                <div style={modalStyle} className={classes.messagePaperTwo}>\r\n                    <CancelIcon className='cancelModalIcon' onClick={() => setImageModal(false)}/>\r\n                    <img onLoadStart={(e) => console.log(e)} src={postPhotoUrl} className='modalImage'/>\r\n                </div>\r\n            </Modal>   \r\n\r\n            <div className=\"feed-post\">\r\n                <div className=\"post-header\">\r\n                    <Avatar className='post-icon' src={userPhotoUrl}/>\r\n                    <span><Link to={`/users/${myUid}`} className='post-header-linkType'>@{username}</Link> · <span className='post-header-timstamp'>{timestamp} </span></span>\r\n                    {\r\n                        username == user.username ? (\r\n                            <div className='option-icon' onClick={optionsClick}>\r\n                                <MoreHorizIcon className='main-opt'/>\r\n                            </div>\r\n                            ) : (\r\n                            null\r\n                        )\r\n                    }\r\n                </div>\r\n                <div className=\"post-message\">\r\n                    <p className='main-msg'>\r\n                        {message}\r\n                    </p>\r\n                {postPhotoUrl ? (\r\n                    <img className='post-image' src={postPhotoUrl} onClick={() => setImageModal(true)} />\r\n                ) : (\r\n                    null\r\n                )}    \r\n                </div>\r\n                <div className=\"message-client-controls\">\r\n                    <div className=\"option-icon\" onClick={() => setCommentsModalState(true)}>\r\n                        <ChatRoundedIcon /><span className='comments-number'>{comments.length}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\features\\userSlice.js",[],"C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\Login.js",["134","135","136","137","138"],"import React, { useState, useEffect } from 'react';\r\nimport './Login.css'\r\nimport { db, auth, storage } from './firebase';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { login, logout } from './features/userSlice';\r\n\r\nfunction Login() {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [profileUrl, setProfileUrl] = useState('');\r\n    const [textareaVal, setTextareaVal] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const dispatch = useDispatch();\r\n    const [collectedBio, setCollectedBio] = useState('');\r\n\r\n    const createAccount = (e) => {\r\n        if (username === null || textareaVal == '') {\r\n            alert('Please enter valid details')\r\n        } else {\r\n            auth.createUserWithEmailAndPassword(email, password)\r\n            .then((userAuth) => {\r\n                console.log(userAuth.user);\r\n                userAuth.user.updateProfile ({\r\n                    displayName: username,\r\n                    photoURL: profileUrl,\r\n                    username: username,\r\n                })\r\n                db.collection('users').doc(userAuth.user.uid).set({\r\n                    username: username,\r\n                    photoURL: profileUrl,\r\n                    email: email,\r\n                    bio: textareaVal\r\n                })\r\n                .then(() => {\r\n                    dispatch(\r\n                        login({\r\n                            email: userAuth.user.email,\r\n                            uid: userAuth.user.uid,\r\n                            username: username,\r\n                            photoURL: profileUrl,\r\n                            bio: textareaVal,\r\n                        })\r\n                    );\r\n                })\r\n            }).catch((error) => alert(error));\r\n        }\r\n    }\r\n\r\n    const loginToApp = (e) => {\r\n        e.preventDefault();\r\n        auth.signInWithEmailAndPassword(email, password)\r\n        .then((userAuth) => {\r\n            db.collection('users').doc(userAuth.uid).onSnapshot((snapshot) => {\r\n                setCollectedBio(snapshot.data());\r\n                console.log('COLLECTEDBIO', collectedBio);\r\n            })\r\n            console.log(userAuth.additionalUserInfo);\r\n            dispatch(\r\n                login({\r\n                    email: userAuth.user.email,\r\n                    uid: userAuth.user.uid,\r\n                    username: userAuth.user.displayName,\r\n                    photoURL: profileUrl,\r\n                })\r\n            );\r\n        }).catch((error) => alert(error));\r\n    } \r\n\r\n    return (\r\n        <div className='login'>\r\n            <form className='login-form'>\r\n                <h3 className='form-title'>Sign into your Account</h3>\r\n                <input value={profileUrl} onChange={(e) => setProfileUrl(e.target.value)} type=\"text\" placeholder='Profile Picture URL (Required if Registering)'/>\r\n                <input value={username} onChange={(e) => setUsername(e.target.value)} type=\"text\" placeholder='Username (Required if Registering)'/>\r\n                <input value={email} onChange={(e) => setEmail(e.target.value)} type=\"email\" placeholder='Email *'/>\r\n                <input value={password} onChange={(e) => setPassword(e.target.value)} type=\"password\" placeholder='Password *'/>\r\n                <textarea value={textareaVal} onChange={(e) => setTextareaVal(e.target.value)} className='loginTextArea' placeholder='Tell us a little about yourself... (Required if Registering)'></textarea>\r\n                <br/>\r\n                <button className='login-btn' type='submit' onClick={loginToApp}>LOGIN</button>\r\n            </form>\r\n            <button className='signup-btn' onClick={createAccount}>SIGN UP</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\GlobalChat.js",["139","140","141","142","143","144","145","146","147","148","149","150"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport './GlobalChat.css';\r\nimport Message from './Message';\r\nimport { selectUser } from './features/userSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { db, storage } from './firebase';\r\nimport firebase from 'firebase';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\n\r\nfunction GlobalChat() {\r\n\r\n    const user = useSelector(selectUser);\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const [image, setImage] = useState(null);\r\n    const [imagePlaceholder, setImagePlaceholder] = useState('');\r\n\r\n    useEffect(() => {\r\n        db.collection('messages').orderBy('timestamp', 'asc').onSnapshot(snapshot => {\r\n            console.log('THIS', snapshot)\r\n          setMessages(snapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            message: doc.data()\r\n          })));\r\n          console.log('MESSAGES', messages);\r\n          document.getElementById('messagesDiv').scrollTop = document.getElementById('messagesDiv').scrollHeight;\r\n        })\r\n    }, []);\r\n\r\n    const checkForSubmit = (e) => {\r\n        if (e.which == 13 && newMessage != '' || e.keyCode == 13 && newMessage != '') {\r\n            sendMessage();\r\n        }\r\n    }\r\n\r\n    const sendMessage = () => {\r\n        if (newMessage != '' && image === null) {\r\n            let date = new Date();\r\n\r\n            let AmOrPm = date.getHours() >= 12 ? 'PM' : 'AM';\r\n    \r\n            let currentTime = date.getMinutes();\r\n    \r\n            if (currentTime < 10) {\r\n                currentTime = `0${date.getMinutes()}`\r\n            }\r\n    \r\n            let currentHour = date.getHours();\r\n    \r\n            if (currentHour < 10) {\r\n                currentHour = `0${date.getHours()}`\r\n            }\r\n    \r\n            if (image !== null) {\r\n                const imageUpload = storage.ref(`messageImages/${image.name}`).put(image);\r\n\r\n                imageUpload.on(\r\n                    \"state_changed\",\r\n                    () => {\r\n                        storage\r\n                            .ref(\"messageImages\")\r\n                            .child(image.name)\r\n                            .getDownloadURL()\r\n                            .then(url => {\r\n                                db.collection('messages').add({\r\n                                    myUid: user.uid,\r\n                                    message: newMessage,\r\n                                    messagePhotoUrl: url,\r\n                                    username: user.username,\r\n                                    time: `${currentHour}:${currentTime} ${AmOrPm}`,\r\n                                    userPhotoUrl: user.photoURL,\r\n                                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                                }); \r\n                            setNewMessage('');\r\n                            setImagePlaceholder('No Image Selected');\r\n                            setImage(null);\r\n                        });\r\n                    }\r\n      );\r\n            } else {\r\n                db.collection('messages').add({\r\n                    myUid: user.uid,\r\n                    message: newMessage,\r\n                    username: user.username,\r\n                    messagePhotoUrl: null,\r\n                    time: `${currentHour}:${currentTime} ${AmOrPm}`,\r\n                    userPhotoUrl: user.photoURL,\r\n                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                });\r\n                setNewMessage('');\r\n            }\r\n        } \r\n        \r\n        else if (newMessage == '' && image !== null) {\r\n            let date = new Date();\r\n\r\n            let AmOrPm = date.getHours() >= 12 ? 'PM' : 'AM';\r\n    \r\n            let currentTime = date.getMinutes();\r\n    \r\n            if (currentTime < 10) {\r\n                currentTime = `0${date.getMinutes()}`\r\n            }\r\n    \r\n            let currentHour = date.getHours();\r\n    \r\n            if (currentHour < 10) {\r\n                currentHour = `0${date.getHours()}`\r\n            }\r\n\r\n            const imageUpload = storage.ref(`messageImages/${image.name}`).put(image);\r\n\r\n            imageUpload.on(\r\n                \"state_changed\",\r\n                () => {\r\n                    storage\r\n                        .ref(\"messageImages\")\r\n                        .child(image.name)\r\n                        .getDownloadURL()\r\n                        .then(url => {\r\n                            db.collection('messages').add({\r\n                                myUid: user.uid,\r\n                                message: newMessage,\r\n                                messagePhotoUrl: url,\r\n                                username: user.username,\r\n                                time: `${currentHour}:${currentTime} ${AmOrPm}`,\r\n                                userPhotoUrl: user.photoURL,\r\n                                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                            }); \r\n                        setNewMessage('');\r\n                        setImagePlaceholder('No Image Selected');\r\n                        setImage(null);\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    const imageFileChange = (e) => {\r\n        setImage(e.target.files[0]);\r\n        setImagePlaceholder(e.target.files[0].name);\r\n    }\r\n\r\n    return (\r\n        <div className='globe'>\r\n            <h2 className='globe-title'>Group Chat</h2>\r\n            <div className=\"global-chat-area\">\r\n                <div className=\"messages-box\" id='messagesDiv'>\r\n                    {\r\n                        messages.map(({ id, message }) => (\r\n                            <Message\r\n                                myUid={message.myUid} \r\n                                messagePhotoUrl={message.messagePhotoUrl}\r\n                                key={id}\r\n                                message={message.message}\r\n                                time={message.time}\r\n                                username={message.username}\r\n                                userPhotoUrl={message.userPhotoUrl}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"message-controls\">\r\n                    <input type=\"text\" onKeyPress={checkForSubmit} placeholder='Type a message...' value={newMessage} onChange={(e) => setNewMessage(e.target.value)}/>\r\n                    <label for=\"file-upload\" class=\"custom-file-upload\">\r\n                    <ImageIcon className='img-btn'/>\r\n                    </label>\r\n                    <input onChange={imageFileChange} accept=\"image/x-png,image/gif,image/jpeg\" id=\"file-upload\" type=\"file\"/>\r\n                    <SendIcon  className='send-btn' onClick={sendMessage}/>\r\n                </div>\r\n                {\r\n                    image !== null ? (\r\n                        <h4 className='img-holder'>{imagePlaceholder}</h4>\r\n                    ) : (\r\n                        <h4 className='img-holder'>No Image Selected</h4>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GlobalChat;\r\n","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\Message.js",["151","152"],"import React from 'react';\r\nimport './Message.css'\r\nimport { selectUser } from './features/userSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Message({ message, username, time, userPhotoUrl, messagePhotoUrl, myUid }) {\r\n\r\n    const user = useSelector(selectUser);\r\n\r\n    return (\r\n        <div className={`message ${username === user.username && \" myself\"}`}>\r\n            <Avatar src={userPhotoUrl} className='message-icon'/>\r\n            <div className=\"main-message-box\">\r\n            <span className='message-info'><Link to={`/users/${myUid}`} className='highlight-text'>@{username}</Link> at {time}</span>\r\n                {\r\n                    message == '' ? (\r\n                        null\r\n                    ) : (\r\n                    <p className='main-message'>\r\n                        {message}\r\n                    </p>\r\n                    )\r\n                }\r\n                {\r\n                    messagePhotoUrl !== null ? (\r\n                        <img src={messagePhotoUrl} className='message-img'/>\r\n                    ) : (\r\n                        null\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\Search.js",["153","154","155","156","157","158","159","160","161"],"import React, { useState, useEffect } from 'react';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport './Search.css'\r\nimport { db, auth } from './firebase';\r\nimport { Avatar } from '@material-ui/core';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport { Link } from 'react-router-dom';\r\n\r\nlet foundUsername;\r\nlet foundId;\r\nlet foundAvatarSrc;\r\nlet foundEmail;\r\n\r\nfunction Search() {\r\n\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [possibleUsers, setPossibleUsers] = useState([]);\r\n    const [userFound, setUserFound] = useState([]);\r\n\r\n    const checkForEnter = (e) => {\r\n        console.log(foundUsername, foundId);\r\n        if (e.which == 13 || e.keyCode == 13) {\r\n            if (searchValue != '') {\r\n                searchForUser();\r\n            }\r\n        } \r\n    }\r\n\r\n    const searchForUser = () => {\r\n        db.collection('users').onSnapshot((snapshot) => {\r\n            setPossibleUsers(snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                data: doc.data()\r\n            })));\r\n        });\r\n        console.log(possibleUsers);\r\n        checkForMatch();\r\n    }\r\n\r\n    const checkForMatch = () => {\r\n        possibleUsers.map(({ id, data }) => {\r\n            if (data.username.includes(searchValue) || data.email.includes(searchValue) ) {\r\n                console.log('Match Found');\r\n                foundUsername = data.username;\r\n                foundId = id;\r\n                foundAvatarSrc = data.photoURL;\r\n                foundEmail = data.email;\r\n                setSearchValue('');\r\n            } else if (searchValue == '') {\r\n                foundUsername = undefined;\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"search-controls\">\r\n                <input type=\"text\" placeholder='Search for someone' onKeyPress={checkForEnter} value={searchValue} onChange={(e) => setSearchValue(e.target.value)}/>\r\n                <SendIcon className='send-btn' onClick={searchForUser}/>\r\n            </div>\r\n            {\r\n                    foundUsername !== undefined ? (\r\n                        <div className='found-account-info'>\r\n                            <div className='account-info one'>\r\n                                <Avatar src={foundAvatarSrc} className='search-avat'/>\r\n                            </div>\r\n                            <div className='account-info two' id={foundId}>\r\n                                <span>{foundUsername}</span>\r\n                                <span>{foundEmail}</span>\r\n                            </div>\r\n                            <Link onClick={() => setSearchValue('')} to={`/users/${foundId}`} className='option-icon search-info-btn'>\r\n                                <span><InfoOutlinedIcon className='main-opt main-com-opt'/></span>\r\n                            </Link>\r\n                        </div>    \r\n                    ) : (\r\n                        null\r\n                    )\r\n                }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;\r\n","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\Comment.js",["162","163","164","165","166","167"],"import React, { useState, useEffect } from 'react';\r\nimport './Comment.css';\r\nimport { selectUser } from './features/userSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport { Avatar } from '@material-ui/core';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { db } from './firebase';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => (console.log(theme), {\r\npaper: {\r\n    position: 'absolute',\r\n    width: 300,\r\n    backgroundColor: 'rgb(21,32,43)',\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    border: 'none',\r\n    borderRadius: '10px',\r\n    outline: 'none',\r\n    animation: 'modal-animation 0.4s'\r\n},\r\nmandatorySpan: {\r\n    color: 'var(--main-app-color)',\r\n    // fontSize: '15px'\r\n},\r\nsubDiv: {\r\n    color: 'white',\r\n    padding: '10px'\r\n},\r\nmessagePaper: {\r\n    position: 'absolute',\r\n    width: '86vw',\r\n    height: '80vh',\r\n    backgroundColor: 'rgb(21,32,43)',\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    border: 'none',\r\n    borderRadius: '10px',\r\n    outline: 'none',\r\n    animation: 'modalAnimation 0.4s'\r\n},\r\nmessagePaperTwo: {\r\n    position: 'absolute',\r\n    width: '86vw',\r\n    height: 'fit-content',\r\n    backgroundColor: 'rgb(21,32,43)',\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    border: 'none',\r\n    borderRadius: '10px',\r\n    outline: 'none',\r\n    animation: 'modalAnimation 0.4s'\r\n}\r\n}));\r\n\r\nfunction Comment({ username, message, time, userPhotoURL, commentId, parentPostId }) {\r\n\r\n    const user = useSelector(selectUser);\r\n    const classes = useStyles();\r\n    const [modalStyle] = useState(getModalStyle);\r\n    const [commentOptionsModalState, setCommentOptionsModalState] = useState(false);\r\n    const [editOptionsModalState, setEditCommentOptionsModalState] = useState(false);\r\n    const [newComment, setNewComment] = useState('');\r\n\r\n    const delComment = () => {\r\n        db.collection('posts').doc(parentPostId).collection('comments').doc(commentId).delete();\r\n    }\r\n\r\n    const editComment = () => {\r\n        setEditCommentOptionsModalState(true);\r\n        db.collection('posts').doc(parentPostId).collection('comments').doc(commentId).onSnapshot(snapshot => {\r\n            setNewComment(snapshot.data().comment);\r\n        })\r\n    }\r\n\r\n    const saveCommentChanges = () => {\r\n        db.collection('posts').doc(parentPostId).collection('comments').doc(commentId).update({\r\n            comment: newComment\r\n        });\r\n        setNewComment('');\r\n    }\r\n\r\n    return (\r\n        <div className='comment'>\r\n            <Modal className='modal' open={commentOptionsModalState} onClose={() => setCommentOptionsModalState(false)}>\r\n                <div style={modalStyle} className={classes.paper}>\r\n                    <CancelIcon className='cancelModalIcon' onClick={() => setCommentOptionsModalState(false)}/>\r\n                    <div className='btn-handlers'>\r\n                        <button onClick={delComment}>Delete Comment</button>\r\n                        <button onClick={editComment}>Edit Comment</button>\r\n                    </div>\r\n                </div>\r\n            </Modal> \r\n\r\n            <Modal className='modal' open={editOptionsModalState} onClose={() => setEditCommentOptionsModalState(false)}>\r\n                <div style={modalStyle} className={classes.paper}>\r\n                    <CancelIcon className='cancelModalIcon' onClick={() => setEditCommentOptionsModalState(false)}/>\r\n                    <div className='comment-edit-controls'>\r\n                        <input type=\"text\" value={newComment} onChange={(e) => setNewComment(e.target.value)}/>\r\n                        <button onClick={saveCommentChanges}>SAVE</button>\r\n                    </div>\r\n                </div>\r\n            </Modal> \r\n\r\n            <div className=\"comment-div comment-div-one\">\r\n                <Avatar src={userPhotoURL} className='message-icon'/>\r\n                <div className=\"main-message-box\">\r\n                    <span className='message-info'><span className='highlight-text'>@{username}</span></span>\r\n                    <p className='main-message'>\r\n                        {message}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"comment-div comment-div-two\">\r\n                <span className='comment-timestamp'>{time} </span>\r\n                {\r\n                    username == user.username ? (\r\n                        <div className='option-icon' onClick={() => setCommentOptionsModalState(true)}>\r\n                                <MoreHorizIcon className='main-opt main-com-opt'/>\r\n                        </div>\r\n                    ) : (\r\n                        null\r\n                    )\r\n                }\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment;\r\n","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\Accounts.js",["168","169","170","171","172","173","174","175","176","177"],"import React, { useState, useEffect } from 'react';\r\nimport './Accounts.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { db, storage, auth } from './firebase';\r\nimport firebase from 'firebase';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logout, login, selectUser } from './features/userSlice';\r\nimport { Avatar } from '@material-ui/core';\r\nimport KeyboardBackspaceRoundedIcon from '@material-ui/icons/KeyboardBackspaceRounded';\r\n\r\nlet userId = window.location.pathname.replace('/users/', '');\r\n\r\nfunction Accounts() {\r\n\r\n    // const { userId } = useParams();\r\n\r\n    const user = useSelector(selectUser);\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [accountInfo, setAccountInfo] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db.collection('users').doc(window.location.pathname.replace('/users/', '')).onSnapshot((snapshot) => {\r\n            setAccountInfo(snapshot.data());\r\n        });\r\n        console.log(accountInfo);\r\n    }, [])\r\n\r\n    const revertPage = () => {\r\n        setAccountInfo([]);\r\n        history.goBack();\r\n    }\r\n\r\n    return (\r\n        <div className='userCard'>\r\n            <div className='backIcon' className='back-option' onClick={revertPage}>\r\n                <KeyboardBackspaceRoundedIcon />\r\n            </div>\r\n            {\r\n                accountInfo !== [] ? (\r\n                    <div className='account-card'>\r\n                        <Avatar className='account-icon' src={accountInfo?.photoURL}/>\r\n                        <div className='account-card-info'>\r\n                            <h1>{accountInfo.username}</h1>\r\n                            <h2>{accountInfo.email}</h2>\r\n                        </div>\r\n                        <p>\r\n                            {accountInfo.bio}\r\n                        </p>\r\n                    </div>\r\n                ) : (\r\n                    null\r\n                )\r\n            }            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Accounts;\r\n","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\EditPage.js",["178","179","180","181","182","183","184"],"import React, { useState, useEffect } from 'react';\r\nimport './EditPage.css';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { db, storage, auth } from './firebase';\r\nimport firebase from 'firebase';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logout, login, selectUser } from './features/userSlice';\r\nimport { Avatar } from '@material-ui/core';\r\nimport KeyboardBackspaceRoundedIcon from '@material-ui/icons/KeyboardBackspaceRounded';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\n\r\nfunction EditPage() {    \r\n\r\n    const [myAccountInfo, setMyAccountInfo] = useState([]);\r\n    const user = useSelector(selectUser);\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();\r\n    const [newUserName, setNewUserName] = useState(user.username);\r\n    const [newBio, setNewBio] = useState(user.bio);\r\n    const [newPhotoURL, setNewPhotoURL] = useState(user.photoURL);\r\n\r\n    useEffect(() => {\r\n        db.collection('users').doc(window.location.pathname.replace('/profile/edit/', '')).onSnapshot((snapshot) => {\r\n            setMyAccountInfo(snapshot.data());\r\n        });\r\n        console.log(myAccountInfo);\r\n        setNewBio(myAccountInfo.bio);\r\n    }, [window.location])\r\n\r\n    const revertPage = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const saveChanges = () => {\r\n        db.collection('users').doc(window.location.pathname.replace('/profile/edit/', '')).update({\r\n            bio: newBio,\r\n            username: newUserName\r\n        });\r\n        document.getElementById('notification').style.display = 'block';\r\n        setTimeout(() => {\r\n        document.getElementById('notification').style.display = 'none';\r\n        }, 3000)\r\n        dispatch(login({\r\n            username: newUserName,\r\n            email: user.email,\r\n            photoURL: newPhotoURL,\r\n            uid: user.uid,\r\n            bio: newBio,\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <div className='edit-page'>\r\n             <div className='backIcon' className='back-option' onClick={revertPage}>\r\n                <KeyboardBackspaceRoundedIcon />\r\n            </div>\r\n            <h1 className='edit-page-header'>Edit Account Details</h1>\r\n            <div className=\"account-info\">\r\n                <div className=\"account-info-two\">\r\n                    <Avatar src={myAccountInfo.photoURL} className='user-icon'/>\r\n                    <h3 className='username-holder'>USERNAME <input type=\"text\" value={newUserName} onChange={(e) => setNewUserName(e.target.value)}/></h3>\r\n                    <h3 className='email-holder'>EMAIL ID<span>{myAccountInfo.email}</span></h3>\r\n                    <h3 className='image-holder'>IMAGE URL <input type=\"text\" value={newPhotoURL} onChange={(e) => setNewPhotoURL(e.target.value)}/></h3>\r\n                </div>\r\n            </div>\r\n           <textarea className='newBioInput' placeholder='Edit your bio' value={newBio} onChange={(e) => setNewBio(e.target.value)}></textarea>\r\n           <button className='save-btn' onClick={saveChanges}>SAVE CHANGES</button>\r\n           <div className='notification' id=\"notification\">\r\n                <span><CheckCircleIcon className='check-icon'/> Changes saved successfully</span>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditPage;\r\n","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\Videocall.js",["185","186","187"],"import React, { useState, useEffect } from 'react';\r\nimport './Videocall.css';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { DocumentPage } from 'twilio/lib/rest/sync/v1/service/document';\r\n\r\nfunction Videocall() {\r\n\r\n    let history = useHistory();\r\n    const [videoStatePlaceholder, setVideoStatePlaceholder] = useState('Turn Video Off');\r\n\r\n    const copyURLtoClipboard = () => {\r\n        navigator.clipboard.writeText(window.location.href);\r\n        document.getElementById('notification').style.display = 'block';\r\n        setTimeout(() => {\r\n        document.getElementById('notification').style.display = 'none';\r\n        }, 3000)\r\n    }\r\n\r\n    const copyMeetingIDtoClipboard = () => {\r\n        navigator.clipboard.writeText(window.location.pathname.replace('/videocall/', ''));\r\n        document.getElementById('notification').style.display = 'block';\r\n        setTimeout(() => {\r\n        document.getElementById('notification').style.display = 'none';\r\n        }, 3000)\r\n    }\r\n\r\n    const getVideoPreview = () => {\r\n        let video = document.getElementById('video-preview-div');\r\n        console.log('VIDEO', video)\r\n        navigator.getUserMedia = navigator.getUserMedia;\r\n        if (navigator.getUserMedia) {\r\n            navigator.getUserMedia({video: true}, handleIncomingVideoPreview, videoPreviewError);\r\n        }\r\n    }\r\n\r\n    const handleIncomingVideoPreview = (stream) => {\r\n        let video = document.getElementById('video-preview-div');\r\n        video.srcObject = stream;\r\n        video.play();\r\n    }\r\n\r\n    const videoPreviewError = (e) => {\r\n        console.log('VIDEO ERROR', e);\r\n    }\r\n\r\n    const toggleVideo = (e) => {\r\n        let video = document.getElementById('video-preview-div');\r\n\r\n        let thisParent = e.target.parentElement.classList;\r\n        let entireClassName = thisParent.value;\r\n\r\n        console.log(entireClassName);\r\n        if (entireClassName.includes('active')) {\r\n            thisParent.remove('active');\r\n            video.srcObject = null;\r\n            setVideoStatePlaceholder('Turn Video On');\r\n        } else {\r\n            thisParent.add('active');\r\n            getVideoPreview();\r\n            setVideoStatePlaceholder('Turn Video Off');\r\n        }\r\n    }\r\n\r\n    getVideoPreview();\r\n    // addSwitching();\r\n\r\n    return (\r\n        <div className='videocall'>\r\n            <h3 className='info-header'>Here's the link to your Video Call... You can share it with the other participants for them to join.</h3>\r\n            <div className=\"copy-head\">\r\n                <h4 className='copy-code-div'>{window.location.href}</h4><span title=\"Copy Meeting URL\" onClick={copyURLtoClipboard}><FileCopyIcon /></span>\r\n            </div>\r\n            <h3 className='info-header'>Meeting ID</h3>\r\n            <div className=\"copy-head\">\r\n                <h4 className='copy-code-div'>{window.location.pathname.replace('/videocall/', '')}</h4><span title=\"Copy Meeting URL\" onClick={copyMeetingIDtoClipboard}><FileCopyIcon /></span>\r\n            </div>\r\n           <div className=\"mid-main\">\r\n           <h2 style={{ textAlign: 'center', }}>Video Preview</h2>\r\n                <div className=\"video-preview\" style={{ borderRadius: '10px' }}>\r\n                    <video id='video-preview-div'></video>\r\n                </div>\r\n                <h3 style={{ textAlign: 'center', color: ' rgb(29,161,242)', transition: 'all 0.2s ease-in', }}>{videoStatePlaceholder}</h3>\r\n                <div className=\"toggle-button active\">\r\n                    <div className=\"inner-circle\" onClick={toggleVideo}>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"start-options-div\">\r\n                    <button onClick={() => history.goBack()}>LEAVE</button>\r\n                    <Link className='main-link-div' to={`/videocall/start/${window.location.pathname.replace('/videocall/', '')}`}><button>START MEETING</button></Link>\r\n                </div>\r\n           </div>\r\n            <div className='notification' id=\"notification\">\r\n                <span><CheckCircleIcon className='check-icon'/> Copied to Clipboard</span>\r\n           </div>\r\n            <div className=\"join-div\">\r\n               <Link className='main-join' to={`/meetings/join`}><button className='join-btn'>JOIN A MEETING</button></Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Videocall;\r\n","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\Join.js",["188","189"],"import React, { useState } from 'react';\r\nimport './Join.css';\r\nimport { useHistory, Link } from 'react-router-dom';\r\n\r\nfunction Join() {\r\n\r\n    const [meetingID, setMeetingID] = useState(null);\r\n\r\n    return (\r\n        <div className='join-page'>\r\n            <h2>Join a Meeting</h2>\r\n            <input type=\"text\" placeholder='Meeting ID' value={meetingID} onChange={(e) => setMeetingID(e.target.value)}/>  \r\n            {\r\n                meetingID != null || meetingID != '' ? (\r\n                    <center>\r\n                        <Link to={`/meeting/${meetingID}`}><button className='main-join-btn'>JOIN</button></Link>\r\n                    </center>\r\n                ) : (\r\n                    null\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Join;\r\n","C:\\Users\\Jaina\\OneDrive\\Documents\\Javascript\\ReactJS\\react-feed\\src\\Meeting.js",[],{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":7,"column":18,"nodeType":"196","messageId":"197","endLine":7,"endColumn":24},{"ruleId":"194","severity":1,"message":"198","line":7,"column":26,"nodeType":"196","messageId":"197","endLine":7,"endColumn":31},{"ruleId":"194","severity":1,"message":"199","line":9,"column":8,"nodeType":"196","messageId":"197","endLine":9,"endColumn":16},{"ruleId":"194","severity":1,"message":"200","line":19,"column":8,"nodeType":"196","messageId":"197","endLine":19,"endColumn":16},{"ruleId":"201","severity":1,"message":"202","line":37,"column":60,"nodeType":"203","messageId":"204","endLine":37,"endColumn":61},{"ruleId":"205","severity":1,"message":"206","line":45,"column":5,"nodeType":"207","messageId":"208","endLine":45,"endColumn":11},{"ruleId":"205","severity":1,"message":"206","line":67,"column":5,"nodeType":"207","messageId":"208","endLine":67,"endColumn":11},{"ruleId":"209","severity":1,"message":"210","line":111,"column":6,"nodeType":"211","endLine":111,"endColumn":8,"suggestions":"212"},{"ruleId":"194","severity":1,"message":"213","line":4,"column":10,"nodeType":"196","messageId":"197","endLine":4,"endColumn":16},{"ruleId":"194","severity":1,"message":"214","line":5,"column":8,"nodeType":"196","messageId":"197","endLine":5,"endColumn":30},{"ruleId":"194","severity":1,"message":"215","line":6,"column":8,"nodeType":"196","messageId":"197","endLine":6,"endColumn":31},{"ruleId":"194","severity":1,"message":"216","line":11,"column":10,"nodeType":"196","messageId":"197","endLine":11,"endColumn":19},{"ruleId":"194","severity":1,"message":"213","line":3,"column":10,"nodeType":"196","messageId":"197","endLine":3,"endColumn":16},{"ruleId":"194","severity":1,"message":"217","line":4,"column":8,"nodeType":"196","messageId":"197","endLine":4,"endColumn":26},{"ruleId":"194","severity":1,"message":"218","line":5,"column":8,"nodeType":"196","messageId":"197","endLine":5,"endColumn":23},{"ruleId":"194","severity":1,"message":"219","line":6,"column":14,"nodeType":"196","messageId":"197","endLine":6,"endColumn":18},{"ruleId":"194","severity":1,"message":"220","line":6,"column":20,"nodeType":"196","messageId":"197","endLine":6,"endColumn":27},{"ruleId":"194","severity":1,"message":"221","line":14,"column":11,"nodeType":"196","messageId":"197","endLine":14,"endColumn":15},{"ruleId":"209","severity":1,"message":"222","line":24,"column":8,"nodeType":"211","endLine":24,"endColumn":10,"suggestions":"223"},{"ruleId":"194","severity":1,"message":"224","line":3,"column":23,"nodeType":"196","messageId":"197","endLine":3,"endColumn":34},{"ruleId":"194","severity":1,"message":"225","line":4,"column":10,"nodeType":"196","messageId":"197","endLine":4,"endColumn":16},{"ruleId":"194","severity":1,"message":"226","line":4,"column":18,"nodeType":"196","messageId":"197","endLine":4,"endColumn":23},{"ruleId":"201","severity":1,"message":"202","line":28,"column":60,"nodeType":"203","messageId":"204","endLine":28,"endColumn":61},{"ruleId":"205","severity":1,"message":"206","line":36,"column":5,"nodeType":"207","messageId":"208","endLine":36,"endColumn":11},{"ruleId":"205","severity":1,"message":"206","line":57,"column":5,"nodeType":"207","messageId":"208","endLine":57,"endColumn":11},{"ruleId":"205","severity":1,"message":"206","line":70,"column":5,"nodeType":"207","messageId":"208","endLine":70,"endColumn":11},{"ruleId":"194","severity":1,"message":"227","line":86,"column":12,"nodeType":"196","messageId":"197","endLine":86,"endColumn":28},{"ruleId":"194","severity":1,"message":"228","line":86,"column":30,"nodeType":"196","messageId":"197","endLine":86,"endColumn":49},{"ruleId":"209","severity":1,"message":"229","line":114,"column":8,"nodeType":"211","endLine":114,"endColumn":16,"suggestions":"230"},{"ruleId":"231","severity":1,"message":"232","line":149,"column":23,"nodeType":"233","messageId":"208","endLine":149,"endColumn":25},{"ruleId":"234","severity":1,"message":"235","line":149,"column":29,"nodeType":"236","messageId":"237","endLine":149,"endColumn":31},{"ruleId":"231","severity":1,"message":"238","line":149,"column":43,"nodeType":"233","messageId":"208","endLine":149,"endColumn":45},{"ruleId":"234","severity":1,"message":"235","line":149,"column":49,"nodeType":"236","messageId":"237","endLine":149,"endColumn":51},{"ruleId":"234","severity":1,"message":"239","line":149,"column":49,"nodeType":"236","messageId":"237","endLine":149,"endColumn":51},{"ruleId":"231","severity":1,"message":"232","line":149,"column":60,"nodeType":"233","messageId":"208","endLine":149,"endColumn":62},{"ruleId":"234","severity":1,"message":"239","line":149,"column":66,"nodeType":"236","messageId":"237","endLine":149,"endColumn":68},{"ruleId":"231","severity":1,"message":"238","line":149,"column":80,"nodeType":"233","messageId":"208","endLine":149,"endColumn":82},{"ruleId":"240","severity":1,"message":"241","line":249,"column":21,"nodeType":"242","endLine":249,"endColumn":105},{"ruleId":"231","severity":1,"message":"232","line":258,"column":34,"nodeType":"233","messageId":"208","endLine":258,"endColumn":36},{"ruleId":"240","severity":1,"message":"241","line":272,"column":21,"nodeType":"242","endLine":272,"endColumn":106},{"ruleId":"194","severity":1,"message":"243","line":1,"column":27,"nodeType":"196","messageId":"197","endLine":1,"endColumn":36},{"ruleId":"194","severity":1,"message":"220","line":3,"column":20,"nodeType":"196","messageId":"197","endLine":3,"endColumn":27},{"ruleId":"194","severity":1,"message":"244","line":4,"column":10,"nodeType":"196","messageId":"197","endLine":4,"endColumn":21},{"ruleId":"194","severity":1,"message":"225","line":5,"column":17,"nodeType":"196","messageId":"197","endLine":5,"endColumn":23},{"ruleId":"231","severity":1,"message":"232","line":18,"column":46,"nodeType":"233","messageId":"208","endLine":18,"endColumn":48},{"ruleId":"194","severity":1,"message":"245","line":1,"column":38,"nodeType":"196","messageId":"197","endLine":1,"endColumn":44},{"ruleId":"209","severity":1,"message":"246","line":29,"column":8,"nodeType":"211","endLine":29,"endColumn":10,"suggestions":"247"},{"ruleId":"231","severity":1,"message":"232","line":32,"column":21,"nodeType":"233","messageId":"208","endLine":32,"endColumn":23},{"ruleId":"234","severity":1,"message":"235","line":32,"column":27,"nodeType":"236","messageId":"237","endLine":32,"endColumn":29},{"ruleId":"231","severity":1,"message":"238","line":32,"column":41,"nodeType":"233","messageId":"208","endLine":32,"endColumn":43},{"ruleId":"234","severity":1,"message":"235","line":32,"column":47,"nodeType":"236","messageId":"237","endLine":32,"endColumn":49},{"ruleId":"234","severity":1,"message":"239","line":32,"column":47,"nodeType":"236","messageId":"237","endLine":32,"endColumn":49},{"ruleId":"231","severity":1,"message":"232","line":32,"column":60,"nodeType":"233","messageId":"208","endLine":32,"endColumn":62},{"ruleId":"234","severity":1,"message":"239","line":32,"column":66,"nodeType":"236","messageId":"237","endLine":32,"endColumn":68},{"ruleId":"231","severity":1,"message":"238","line":32,"column":80,"nodeType":"233","messageId":"208","endLine":32,"endColumn":82},{"ruleId":"231","severity":1,"message":"238","line":38,"column":24,"nodeType":"233","messageId":"208","endLine":38,"endColumn":26},{"ruleId":"231","severity":1,"message":"232","line":95,"column":29,"nodeType":"233","messageId":"208","endLine":95,"endColumn":31},{"ruleId":"231","severity":1,"message":"232","line":18,"column":29,"nodeType":"233","messageId":"208","endLine":18,"endColumn":31},{"ruleId":"240","severity":1,"message":"241","line":28,"column":25,"nodeType":"242","endLine":28,"endColumn":77},{"ruleId":"194","severity":1,"message":"243","line":1,"column":27,"nodeType":"196","messageId":"197","endLine":1,"endColumn":36},{"ruleId":"194","severity":1,"message":"219","line":4,"column":14,"nodeType":"196","messageId":"197","endLine":4,"endColumn":18},{"ruleId":"194","severity":1,"message":"248","line":18,"column":12,"nodeType":"196","messageId":"197","endLine":18,"endColumn":21},{"ruleId":"194","severity":1,"message":"249","line":18,"column":23,"nodeType":"196","messageId":"197","endLine":18,"endColumn":35},{"ruleId":"231","severity":1,"message":"232","line":22,"column":21,"nodeType":"233","messageId":"208","endLine":22,"endColumn":23},{"ruleId":"231","severity":1,"message":"232","line":22,"column":40,"nodeType":"233","messageId":"208","endLine":22,"endColumn":42},{"ruleId":"231","severity":1,"message":"238","line":23,"column":29,"nodeType":"233","messageId":"208","endLine":23,"endColumn":31},{"ruleId":"250","severity":1,"message":"251","line":41,"column":42,"nodeType":"252","messageId":"253","endLine":41,"endColumn":44},{"ruleId":"231","severity":1,"message":"232","line":49,"column":36,"nodeType":"233","messageId":"208","endLine":49,"endColumn":38},{"ruleId":"194","severity":1,"message":"243","line":1,"column":27,"nodeType":"196","messageId":"197","endLine":1,"endColumn":36},{"ruleId":"201","severity":1,"message":"202","line":23,"column":60,"nodeType":"203","messageId":"204","endLine":23,"endColumn":61},{"ruleId":"205","severity":1,"message":"206","line":31,"column":5,"nodeType":"207","messageId":"208","endLine":31,"endColumn":11},{"ruleId":"205","severity":1,"message":"206","line":52,"column":5,"nodeType":"207","messageId":"208","endLine":52,"endColumn":11},{"ruleId":"205","severity":1,"message":"206","line":65,"column":5,"nodeType":"207","messageId":"208","endLine":65,"endColumn":11},{"ruleId":"231","severity":1,"message":"232","line":133,"column":30,"nodeType":"233","messageId":"208","endLine":133,"endColumn":32},{"ruleId":"194","severity":1,"message":"220","line":4,"column":14,"nodeType":"196","messageId":"197","endLine":4,"endColumn":21},{"ruleId":"194","severity":1,"message":"219","line":4,"column":23,"nodeType":"196","messageId":"197","endLine":4,"endColumn":27},{"ruleId":"194","severity":1,"message":"199","line":5,"column":8,"nodeType":"196","messageId":"197","endLine":5,"endColumn":16},{"ruleId":"194","severity":1,"message":"225","line":7,"column":10,"nodeType":"196","messageId":"197","endLine":7,"endColumn":16},{"ruleId":"194","severity":1,"message":"226","line":7,"column":18,"nodeType":"196","messageId":"197","endLine":7,"endColumn":23},{"ruleId":"194","severity":1,"message":"254","line":11,"column":5,"nodeType":"196","messageId":"197","endLine":11,"endColumn":11},{"ruleId":"194","severity":1,"message":"221","line":17,"column":11,"nodeType":"196","messageId":"197","endLine":17,"endColumn":15},{"ruleId":"194","severity":1,"message":"255","line":19,"column":11,"nodeType":"196","messageId":"197","endLine":19,"endColumn":19},{"ruleId":"209","severity":1,"message":"256","line":27,"column":8,"nodeType":"211","endLine":27,"endColumn":10,"suggestions":"257"},{"ruleId":"258","severity":1,"message":"259","line":36,"column":39,"nodeType":"260","endLine":36,"endColumn":62},{"ruleId":"194","severity":1,"message":"216","line":3,"column":22,"nodeType":"196","messageId":"197","endLine":3,"endColumn":31},{"ruleId":"194","severity":1,"message":"220","line":4,"column":14,"nodeType":"196","messageId":"197","endLine":4,"endColumn":21},{"ruleId":"194","severity":1,"message":"219","line":4,"column":23,"nodeType":"196","messageId":"197","endLine":4,"endColumn":27},{"ruleId":"194","severity":1,"message":"199","line":5,"column":8,"nodeType":"196","messageId":"197","endLine":5,"endColumn":16},{"ruleId":"194","severity":1,"message":"225","line":7,"column":10,"nodeType":"196","messageId":"197","endLine":7,"endColumn":16},{"ruleId":"209","severity":1,"message":"261","line":28,"column":8,"nodeType":"211","endLine":28,"endColumn":25,"suggestions":"262"},{"ruleId":"258","severity":1,"message":"259","line":54,"column":40,"nodeType":"260","endLine":54,"endColumn":63},{"ruleId":"194","severity":1,"message":"243","line":1,"column":27,"nodeType":"196","messageId":"197","endLine":1,"endColumn":36},{"ruleId":"194","severity":1,"message":"263","line":6,"column":10,"nodeType":"196","messageId":"197","endLine":6,"endColumn":22},{"ruleId":"264","severity":1,"message":"265","line":32,"column":34,"nodeType":"266","messageId":"267","endLine":32,"endColumn":56},{"ruleId":"194","severity":1,"message":"268","line":3,"column":10,"nodeType":"196","messageId":"197","endLine":3,"endColumn":20},{"ruleId":"231","severity":1,"message":"238","line":14,"column":48,"nodeType":"233","messageId":"208","endLine":14,"endColumn":50},"no-native-reassign",["269"],"no-negated-in-lhs",["270"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'firebase' is defined but never used.","'EditIcon' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-dupe-keys","Duplicate key 'border'.","ObjectExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'collectedBio' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["271"],"'Avatar' is defined but never used.","'MailOutlineRoundedIcon' is defined but never used.","'ControlPointRoundedIcon' is defined but never used.","'useParams' is defined but never used.","'FavoriteBorderIcon' is defined but never used.","'ChatRoundedIcon' is defined but never used.","'auth' is defined but never used.","'storage' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'posts'. Either include it or remove the dependency array.",["272"],"'useDispatch' is defined but never used.","'logout' is defined but never used.","'login' is defined but never used.","'selectedEditData' is assigned a value but never used.","'setSelectedEditData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'comments'. Either include it or remove the dependency array.",["273"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Expected '!==' and instead saw '!='.","Unexpected mix of '||' and '&&'.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'messages'. Either include it or remove the dependency array.",["274"],"'userFound' is assigned a value but never used.","'setUserFound' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'userId' is assigned a value but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'accountInfo'. Either include it or remove the dependency array.",["275"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'myAccountInfo'. Either include it or remove the dependency array. Outer scope values like 'window.location' aren't valid dependencies because mutating them doesn't re-render the component.",["276"],"'DocumentPage' is defined but never used.","no-self-assign","'navigator.getUserMedia' is assigned to itself.","MemberExpression","selfAssignment","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},"Update the dependencies array to be: [collectedBio, dispatch]",{"range":"289","text":"290"},"Update the dependencies array to be: [posts]",{"range":"291","text":"292"},"Update the dependencies array to be: [comments, postId]",{"range":"293","text":"294"},"Update the dependencies array to be: [messages]",{"range":"295","text":"296"},"Update the dependencies array to be: [accountInfo]",{"range":"297","text":"298"},"Update the dependencies array to be: [myAccountInfo]",{"range":"299","text":"300"},[3455,3457],"[collectedBio, dispatch]",[817,819],"[posts]",[3529,3537],"[comments, postId]",[1150,1152],"[messages]",[1010,1012],"[accountInfo]",[1224,1241],"[myAccountInfo]"]